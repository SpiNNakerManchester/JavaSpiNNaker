# Copyright (c) 2020 The University of Manchester
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

name: Build and Test
on: 
  push:
    # On any push to any branch
  schedule:
    # Build daily on the default branch at 04:40
    - cron: "40 4 * * *"
env:
  SETTINGS_FILE: .github/settings.xml

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 14]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3.2.0
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: build-m2-j${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: build-m2-j${{ matrix.java }}

    - name: Ensure dependencies are present
      run: mvn -B dependency:resolve dependency:resolve-plugins --settings $SETTINGS_FILE
      continue-on-error: true

    - name: Build
      run: mvn install --settings $SETTINGS_FILE -DskipTests=true -Dmaven.javadoc.skip=true
    - name: "Check: Test"
      run: mvn verify --settings $SETTINGS_FILE -Dmaven.javadoc.skip=true jacoco:report
    - name: "Report: Coverage via coveralls.io"
      run: |
        export CI_BRANCH=${BRANCH_NAME_OR_REF#refs/heads/}
        export CI_PULL_REQUEST=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        mvn coveralls:report --settings $SETTINGS_FILE --no-transfer-progress -DrepoToken=$COVERALLS_SECRET
      env:
        CI_NAME: github
        BRANCH_NAME_OR_REF: ${{ github.head_ref || github.ref }}
        CI_BUILD_NUMBER: ${{ github.run_id }}
        CI_BUILD_URL: https://github.com/${{ github.repository }}/commit/${{ github.event.after }}/checks
        COVERALLS_SECRET: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
    - name: Upload Build (JDK 8 only)
      if: matrix.java == 8
      uses: actions/upload-artifact@v3
      with:
        name: spinnaker-exe.jar
        path: SpiNNaker-front-end/target/spinnaker-exe.jar
        retention-days: 5

    - name: "Post: Purge SNAPSHOTs"
      # Do not cache SNAPSHOT dependencies; we don't use external snapshots
      # and we will always rebuild internal snapshots.
      run: mvn dependency:purge-local-repository --settings $SETTINGS_FILE -DsnapshotsOnly=true -DreResolve=false
      continue-on-error: true

  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3.2.0
      with:
        distribution: 'zulu'
        java-version: ${{ matrix.java }}
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: validate-m2-j${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: validate-m2-j${{ matrix.java }}

    - name: Ensure dependencies are present
      run: mvn -B dependency:resolve dependency:resolve-plugins --settings $SETTINGS_FILE
      continue-on-error: true

    - name: "Check: copyright declarations"
      run: mvn apache-rat:check --settings $SETTINGS_FILE -V || (find . -type f -name 'rat*.txt' -print | xargs grep -l unapproved | xargs cat; exit 1)
    - name: "Check: Code Style"
      # Dependencies are such that compile needs to run before checkstyle
      run: mvn compile checkstyle:check --settings $SETTINGS_FILE -Dmaven.javadoc.skip=true
    - name: Build
      run: mvn install --settings $SETTINGS_FILE -DskipTests=true -Dmaven.javadoc.skip=true
    - name: "Check: Documentation"
      run: mvn javadoc:aggregate --settings $SETTINGS_FILE

    - name: "Post: Purge SNAPSHOTs"
      # Do not cache SNAPSHOT dependencies; we don't use external snapshots and
      # we will always rebuild internal snapshots.
      run: mvn dependency:purge-local-repository --settings $SETTINGS_FILE -DsnapshotsOnly=true -DreResolve=false
      continue-on-error: true
