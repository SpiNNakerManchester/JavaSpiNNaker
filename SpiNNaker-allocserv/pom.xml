<?xml version="1.0"?>
<!--
Copyright (c) 2021 The University of Manchester

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>uk.ac.manchester.spinnaker</groupId>
		<artifactId>SpiNNaker</artifactId>
		<version>7.2.2</version>
	</parent>
	<artifactId>SpiNNaker-allocserv</artifactId>
	<packaging>war</packaging>
	<properties>
		<node.version>v14.17.6</node.version>

		<!-- These ought to be one, but of course they aren't. -->
		<typescript-language.version>ES6</typescript-language.version>
		<javascript-language.version>ECMASCRIPT_2015</javascript-language.version>

		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<start.class>uk.ac.manchester.spinnaker.alloc.ServiceConfig</start.class>
		<!-- TLS-secured service that we need to talk to at runtime startup. -->
		<ebrains.wellknown.server>iam.ebrains.eu</ebrains.wellknown.server>
		<ebrains.wellknown.server.dev>iam-int.ebrains.eu</ebrains.wellknown.server.dev>
		<!-- https://iam.ebrains.eu/auth/realms/hbp/.well-known/openid-configuration -->
		<truststore.file>${project.build.directory}/generated-resources/truststore.p12</truststore.file>
		<truststore.pass>hunter2</truststore.pass>
		<npm.command>build</npm.command>
	</properties>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/resources-filtered</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${project.build.directory}/generated-resources</directory>
			</resource>
		</resources>
		<finalName>spalloc</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>${start.class}</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>make-project-output-directory</id>
						<phase>initialize</phase>
						<configuration>
							<target>
								<mkdir dir="${project.build.directory}/generated-resources"/>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Typescript compiler -->
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- Uses many defaults -->
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>npm-run-build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>run ${npm.command}</arguments>
							<environmentVariables>
								<TYPESCRIPT_SRC_DIR>${project.basedir}/src/main/typescript</TYPESCRIPT_SRC_DIR>
								<TYPESCRIPT_TARGET>${typescript-language.version}</TYPESCRIPT_TARGET>
							</environmentVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Javascript minifier -->
				<groupId>com.github.blutorange</groupId>
				<artifactId>closure-compiler-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>minify-js</id>
						<goals>
							<goal>minify</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<sourceDir>js</sourceDir>
							<targetDir>META-INF/public-web-resources</targetDir>
							<includes>*.js</includes>
							<skipMerge>true</skipMerge>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/annotations/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>uk.co.automatictester</groupId>
				<artifactId>truststore-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-truststore</id>
						<goals>
							<goal>generate-truststore</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<truststoreFile>${truststore.file}</truststoreFile>
							<truststorePassword>${truststore.pass}</truststorePassword>
							<servers>
								<server>${ebrains.wellknown.server}:443</server>
								<!-- Skip things that are down -->
								<!--
								<server>${ebrains.wellknown.server.dev}:443</server>
								-->
							</servers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<annotationProcessorPaths>
							<annotationProcessorPath>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring.boot.version}</version>
							</annotationProcessorPath>
						</annotationProcessorPaths>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<systemPropertyVariables>
							<java.util.logging.manager>org.apache.logging.log4j.jul.LogManager</java.util.logging.manager>
						</systemPropertyVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<configuration>
						<nodeVersion>${node.version}</nodeVersion>
						<installDirectory>${project.build.directory}</installDirectory>
						<workingDirectory>${project.basedir}/src/main/frontend</workingDirectory>
						<environmentVariables>
							<MAVEN_PROJECT_DIR>${project.basedir}</MAVEN_PROJECT_DIR>
							<MAVEN_BUILD_DIR>${project.build.directory}</MAVEN_BUILD_DIR>
						</environmentVariables>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.blutorange</groupId>
					<artifactId>closure-compiler-maven-plugin</artifactId>
					<configuration>
						<baseSourceDir>${project.build.directory}</baseSourceDir>
						<baseTargetDir>${project.build.buildDirectory}</baseTargetDir>
						<encoding>${project.build.sourceEncoding}</encoding>
						<outputFilename>#{basename}.#{extension}</outputFilename>
						<closureLanguageOut>${javascript-language.version}</closureLanguageOut>
					</configuration>
				</plugin>
				<plugin>
					<groupId>uk.co.automatictester</groupId>
					<artifactId>truststore-maven-plugin</artifactId>
					<configuration>
						<trustAllCertificates>true</trustAllCertificates>
						<truststoreFormat>PKCS12</truststoreFormat>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.sling</groupId>
					<artifactId>jspc-maven-plugin</artifactId>
					<configuration>
						<sourceDirectory>${project.basedir}/src/main/webapp/WEB-INF</sourceDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Redo the import of the Spring POM -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- Import dependency management from CXF -->
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bom</artifactId>
				<version>${cxf.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<!-- Spring Boot doesn't say anything about this... -->
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Something is forcing these to otherwise be wrong -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-jul</artifactId>
				<version>${log4j.version}</version>
				<scope>runtime</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>uk.ac.manchester.spinnaker</groupId>
			<artifactId>SpiNNaker-comms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description-openapi-v3</artifactId>
		</dependency>
		<dependency>
			<!-- Needed for swagger support to work because of how feature binding works. -->
			<groupId>jakarta.xml.ws</groupId>
			<artifactId>jakarta.xml.ws-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.livesense</groupId>
			<artifactId>org.liveSense.scripting.jsp.taglib.jsonatg</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jul</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hobsoft.spring</groupId>
			<artifactId>spring-rest-template-logger</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j2-impl</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mysql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<description>A board allocation service for SpiNNaker.</description>
	<name>SpiNNaker Allocation Server</name>

	<profiles>
		<profile>
			<id>devtools</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>jsp-precompile</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<!-- JSP syntax check via pre-compilation -->
						<groupId>org.apache.sling</groupId>
						<artifactId>jspc-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>jspc</goal>
								</goals>
								<phase>compile</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>windows-specific-bits</id>
			<activation>
				<os><family>windows</family></os>
			</activation>
			<properties>
				<npm.command>build-win</npm.command>
			</properties>
		</profile>
	</profiles>
</project>
